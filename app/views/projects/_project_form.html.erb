<div class="alert alert-info alert-dismissible fade" role="alert" id="upload-success">
  <strong>Yay!</strong> The files successfully uploaded and are now being processed. You'll be redirected shortly. <i class="fa fa-spinner fa-spin" aria-hidden="true"></i>
  <button type="button" class="close" data-dismiss="alert" aria-label="Close">
    <span aria-hidden="true">&times;</span>
  </button>
</div>
<h2 id="form-title">
  Create New Request
</h2>
<%= form_for(@project, html: { multipart: true, role: 'form', :id => "fileupload"}, authenticity_token: true) do |f| %>
  <div class="form-group">
    <%= f.label :name, "Project Name" %>
    <%= f.text_field :name, class: "form-control", placeholder: "Project Name", autofocus: true %>
 </div>
 <div class="form-group">
    <%= f.label :description , "Project Description" %>
    <%= f.cktext_area :description, id: 'description',rows: 10, class: "form-control", placeholder: "Project Description", autofocus: true %>
 </div>
 <div class="form-group">
    <%= f.label :link_to_sample_website , "Link To Sample Website"%>
    <%= f.text_field :link_to_sample, class: "form-control", placeholder: "Link To Sample Website", autofocus: true %>
 </div>
 <div class="form-group">
    <%= f.label :Budget %>
    <%= f.number_field :budget, placeholder: "Budget",class: "form-control", autofocus: true %>
 </div>
<p> 
  Upload images
</p>
<div id="actions" class="row">

      <div class="col-lg-7">
        <!-- The fileinput-button span is used to style the file input field as button -->
        <span class="btn btn-primary fileinput-button">
            <i class="fa fa-upload"></i>
            <span>Add files...</span>
        </span>
        <button type="reset" class="btn btn-danger cancel">
            <i class="fa fa-refresh"></i>
            <span>Reset Queue</span>
        </button>
      </div>

      <div class="col-lg-5">
        <!-- The global file processing state -->
        <span class="fileupload-process">
          <div id="total-progress" class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
            <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>
          </div>
        </span>
      </div>

    </div>








    <div class="table table-striped files" id="previews">

      <div id="template" class="file-row">
        <!-- This is used as the file preview template -->
        <div>
            <span class="preview"><img data-dz-thumbnail /></span>
        </div>
        <div>
            <p class="name" data-dz-name></p>
            <strong class="error text-danger" data-dz-errormessage></strong>
        </div>
        <div>
            <p class="size" data-dz-size></p>
            <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
              <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>
            </div>
        </div>
        <div>
          <button data-dz-remove class="btn btn-warning cancel">
              <i class="glyphicon glyphicon-ban-circle"></i>
              <span>Cancel</span>
          </button>
          <div data-dz-remove>
            <i class="fa fa-tick"></i>
            <span>Completed</span>
          </div>
        </div>
      </div>
    </div>
    <div class="center">
    <%= button_tag type: 'button', class: "btn btn-success", id: "register-button" do %>
        Send Request!
        <i class="fa fa-paper-plane" aria-hidden="true"></i>
    <% end %>
  </div>
  <% end%>
    <script>
      // Get the template HTML and remove it from the doument
      var AUTH_TOKEN=$('meta[name="csrf-token"]').attr('content');
      var previewNode = document.querySelector("#template");
      previewNode.id = "";
      var previewTemplate = previewNode.parentNode.innerHTML;
      previewNode.parentNode.removeChild(previewNode);
      Dropzone.autoDiscover = false;
      var myDropzone = new Dropzone(document.getElementById('fileupload'), { // Make the whole body a dropzone
        thumbnailWidth: 80,
        thumbnailHeight: 80,
        parallelUploads: 10,
        maxFiles: 10,
        uploadMultiple: true,
        previewTemplate: previewTemplate,
        paramName: "images",
        params:{
          'authenticity_token':  AUTH_TOKEN
        },
        autoQueue: false, // Make sure the files aren't queued until manually added
        previewsContainer: "#previews", // Define the container to display the previews
        clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
      });
      
      // Update the total progress bar
      myDropzone.on("totaluploadprogress", function(progress, totalBytes, totalBytesSent) {
        document.querySelector("#total-progress .progress-bar").style.width = progress + "%";
      });

      myDropzone.on("sendingmultiple", function(data, xhr, formData) {
        // Show the total progress bar when upload starts
        document.querySelector("#total-progress").style.opacity = "1";
           for (instance in CKEDITOR.instances) {
             CKEDITOR.instances[instance].updateElement();
          }
        formData.append('description',  $("#description").val());
      });
      myDropzone.on("processingmultiple", function(file){
        document.querySelector('#register-button').style.display = 'none';
        $('#upload-success').addClass('show');
        $('html,body').scrollTop(0);
      });
      // Hide the total progress bar when nothing's uploading anymore
      myDropzone.on("queuecomplete", function(progress) {
        document.querySelector("#total-progress").style.opacity = "0";
      });
      myDropzone.on("successmultiple", function(file, response){
        window.location.href = "/projects/"+response.id
      });
      // Setup the buttons for all transfers
      // The "add files" button doesn't need to be setup because the config
      // `clickable` has already been specified.
      document.querySelector("#register-button").onclick = function() {
        myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED));
        if(myDropzone.getQueuedFiles().length > 0){
        }else{
          $('#fileupload').submit();
        }
      };
      document.querySelector("#actions .cancel").onclick = function() {
        myDropzone.removeAllFiles(true);
      };

    </script>



